# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, pyOpenSci
# This file is distributed under the same license as the pyOpenSci Python
# Package Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pyOpenSci Python Package Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-05 16:05-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: es\n"
"Language-Team: es <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../CONTRIBUTING.md:4
msgid "Contributing Guide for the Python open source software packaging book"
msgstr ""

#: ../../CONTRIBUTING.md:6
msgid ""
"This is a community resource. We welcome contributions in the form of "
"issues and/or pull requests to this guide."
msgstr ""

#: ../../CONTRIBUTING.md:8
msgid ""
"If you have an idea for something that should be included in the guide, "
"[please open an issue here](https://github.com/pyOpenSci/python-package-"
"guide/issues)."
msgstr ""

#: ../../CONTRIBUTING.md:9
msgid ""
"If you find a typo, feel free to [submit a pull "
"request](https://github.com/pyOpenSci/python-package-guide/pulls) to "
"modify the text directly. Or, if you are less comfortable with pull "
"requests, feel free to open an issue."
msgstr ""

#: ../../CONTRIBUTING.md:10
msgid ""
"If you want to see a larger change to the content of the guide book, "
"please submit an issue first!"
msgstr ""

#: ../../CONTRIBUTING.md:12
msgid "How this guide is structured"
msgstr ""

#: ../../CONTRIBUTING.md:14
msgid ""
"Most of this repository is structured for **Sphinx**, a documentation "
"engine built in `Python`. We are using the Sphinx Book Theme and the "
"`myST` syntax to create each page in this book."
msgstr ""

#: ../../CONTRIBUTING.md:16
msgid ""
"If you wish to contribute by working on the guide book locally, you will "
"first need to"
msgstr ""

#: ../../CONTRIBUTING.md:19
msgid "Fork this repository"
msgstr ""

#: ../../CONTRIBUTING.md:20
msgid "Clone it locally"
msgstr ""

#: ../../CONTRIBUTING.md:21
msgid "Build the documentation locally"
msgstr ""

#: ../../CONTRIBUTING.md:23
msgid "Instructions for building the documentation locally on your computer"
msgstr ""

#: ../../CONTRIBUTING.md:25
msgid ""
"The easiest way to build the documentation in this repository is to use "
"`nox`, a tool for quickly building environments and running commands "
"within them. Nox ensures that your environment has all the dependencies "
"needed to build the documentation."
msgstr ""

#: ../../CONTRIBUTING.md:29
msgid "To do so, follow these steps:"
msgstr ""

#: ../../CONTRIBUTING.md:31
msgid "Install `nox`"
msgstr ""

#: ../../CONTRIBUTING.md:36
msgid "Build the documentation:"
msgstr ""

#: ../../CONTRIBUTING.md:42
msgid ""
"This should create a local environment in a `.nox` folder, build the "
"documentation (as specified in the `noxfile.py` configuration), and the "
"output will be in `_build/html`. The site can then be viewed locally by "
"opening the top level `index.html` in your web browser. The exact "
"location of this file will depend on you system, but the output of the "
"following command could be copied into an address bar"
msgstr ""

#: ../../CONTRIBUTING.md:49
msgid ""
"To build live documentation that updates when you update local files, run"
" the following command:"
msgstr ""

#: ../../CONTRIBUTING.md:55
msgid ""
"When build like this, the output will tell you a localhost address where "
"the site can be viewed, generally http://127.0.0.1:8000."
msgstr ""

#: ../../CONTRIBUTING.md:57
msgid "Code examples"
msgstr ""

#: ../../CONTRIBUTING.md:59
msgid ""
"This guide uses the [literalinclude Sphinx directive](https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/directives.html#directive-"
"literalinclude) whenever possible to keep code and prose separate. Code "
"for use in the documentation is kept in the `examples/` folder."
msgstr ""

#: ../../CONTRIBUTING.md:62
msgid "Referencing code in documentation"
msgstr ""

#: ../../CONTRIBUTING.md:64
msgid ""
"If an example is present elsewhere in the documentation that you want to "
"use, you can copy the `literalinclude` directive verbatim and the "
"examples will stay in sync."
msgstr ""

#: ../../CONTRIBUTING.md:67
msgid ""
"If you already see code in the examples folder that you can use for new "
"documentation, a new `literalinclude` can be made to extract it into the "
"site. Only a relative path to the code is required for a working "
"`literalinclude`, but you should in almost all cases also provide a "
"`:language:` and `:lines:`. The former makes code examples prettier, and "
"the later can protect your example from future modifications to the code."
msgstr ""

#: ../../CONTRIBUTING.md:72
msgid ""
"**Pro tip**: As an alternative to `:lines:` there are also the `:start-"
"after:`, `:start-at:`, `:end-before:`, and `:end-at:` options. And if the"
" example code is Python, `:pyobject:` can be an even more future-proof "
"way to keep the same documentation content even through code refactors."
msgstr ""

#: ../../CONTRIBUTING.md:76
msgid ""
"If you need example code that doesn't yet exist in `examples/` [see "
"creating code for documentation](#creating-code-for-documentation)."
msgstr ""

#: ../../CONTRIBUTING.md:78
msgid "Creating code for documentation"
msgstr ""

#: ../../CONTRIBUTING.md:80
msgid ""
"Whenever you come across a place that could benefit from a code block, "
"instead of writing it in-line with a code fence (`` ``` `` blocked text) "
"you can write it as a file in its own format. Your example may even "
"already exist; [see referencing code in documentation ](#referencing-"
"code-in-documentation)."
msgstr ""

#: ../../CONTRIBUTING.md:84
msgid ""
"If you want to add a new example that doesn't fit into any of the "
"existing example files, you can create a new file and reference it in a "
"`literalinclude` block. If it makes sense for that file to live within "
"one of the existing example projects please add it there; otherwise "
"create a new folder in the `examples` directory."
msgstr ""

#: ../../CONTRIBUTING.md:88
msgid ""
"If an existing example is incomplete or a new example makes sense to be "
"added to an existing file, go ahead and add it, but take care to not "
"break the rest of the guide. Whenever possible, extend the example rather"
" that rewrite it. So for instance, add new functions to the end of the "
"file, new methods after all existing ones in a class."
msgstr ""

#: ../../CONTRIBUTING.md:92
msgid ""
"Example code is checked for correctness, so adding a new example may "
"require adding additional tests for coverage, and will require fixing any"
" failing tests."
msgstr ""

#: ../../CONTRIBUTING.md:95
msgid ""
"***⚠️ WARNING***: great care should be taken when modifying existing "
"example code, especially any modification beyond appending to the end of "
"the file. All code examples are (potentially) shared examples. This makes"
" for more consistent examples in the guide but can mean action-"
"at-a-distance when modifying the examples for one particular use case. If"
" you find yourself modifying existing examples try running this command "
"and then checking those pages in a new build."
msgstr ""

#: ../../CONTRIBUTING.md:103
msgid "Example:"
msgstr ""

#: ../../CONTRIBUTING.md:105
msgid "Instead of writing example code in markdown like this"
msgstr ""

#: ../../CONTRIBUTING.md:116
msgid "The python can be extracted into a `.py` file"
msgstr ""

#: ../../CONTRIBUTING.md:130
msgid ""
"As another example, if you only need to show part of a `pyproject.toml`, "
"we already have complete project definitions, you need only to find the "
"relevant part."
msgstr ""

#: ../../CONTRIBUTING.md:133
msgid "Instead of writing this"
msgstr ""

#: ../../CONTRIBUTING.md:145
msgid "an example could be extracted from an existing toml file"
msgstr ""
